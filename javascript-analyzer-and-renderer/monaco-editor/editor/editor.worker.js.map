{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","Range","_position_js__WEBPACK_IMPORTED_MODULE_0__","startLineNumber","startColumn","endLineNumber","endColumn","this","isEmpty","range","containsPosition","position","lineNumber","column","containsRange","otherRange","plusRange","a","b","Math","min","max","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","other","getEndPosition","getStartPosition","toString","setEndPosition","setStartPosition","collapseToStart","fromPositions","start","end","lift","isIRange","obj","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","isDisposable","thing","dispose","length","first","rest","_i","arguments","Array","isArray","forEach","combinedDisposable","disposables","toDisposable","fn","Disposable","ImmortalReference","_toDispose","_lifecycle_disposable_isDisposed","_register","console","warn","push","None","freeze","setImmediate","global","finallyConstructor","callback","constructor","then","resolve","reason","reject","setTimeoutFunc","setTimeout","noop","Promise","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","promise","newValue","finale","thisArg","apply","_unhandledRejectionFn","len","Handler","done","ex","prom","all","arr","args","slice","remaining","res","val","race","values","err","globalNS","window","Error","factory","scope","Function","Timeout","id","clearFn","_id","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","process","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","data","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","random","source","indexOf","addEventListener","attachEvent","task","run","URI","extendStatics","_a","_platform_js__WEBPACK_IMPORTED_MODULE_0__","__extends","setPrototypeOf","__proto__","__","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_empty","_slash","_regexp","schemeOrData","authority","path","query","fragment","_strict","scheme","trace","_schemeFix","_referenceResolution","test","_validateUri","isUri","fsPath","with","_makeFsPath","configurable","change","_URI","parse","match","exec","decodeURIComponent","file","replace","idx","substring","from","components","skipEncoding","_asFormatted","toJSON","revive","result","_fsPath","_formatted","external","_super","_this","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","code","charCodeAt","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","String","fromCharCode","CancellationToken","CancellationTokenSource","_event_js__WEBPACK_IMPORTED_MODULE_0__","shortcutEvent","context","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","fire","parent","_token","_parentListener","KeyCodeUtils","KeyChord","createKeybinding","SimpleKeybinding","ResolvedKeybindingPart","ResolvedKeybinding","_errors_js__WEBPACK_IMPORTED_MODULE_0__","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","str","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","firstPart","secondPart","keybinding","OS","chordPart","ChordKeybinding","createSimpleKeybinding","ctrlCmd","winCtrl","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","ctrlKey","shiftKey","altKey","metaKey","equals","isModifierKey","toChord","isDuplicateModifierCase","parts","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","initialize","_base_common_worker_simpleWorker_js__WEBPACK_IMPORTED_MODULE_0__","_common_services_editorSimpleWorker_js__WEBPACK_IMPORTED_MODULE_1__","initialized","foreignModule","editorWorker","simpleWorker","msg","FIN","Iterator","getSequenceIterator","ArrayIterator","ArrayNavigator","MappedIterator","arg","fromArray","next","iterator","empty","array","index","elements","map","element","filter","collect","items","current","previous","last","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","Uint8Matrix","toUint8","toUint32","toUint32Array","rows","cols","defaultValue","Uint8Array","_data","row","col","set","v","Uint32Array","event_Event","event_Emitter","event_PauseableEmitter","event_EventMultiplexer","EventBufferer","event_Relay","Event","_disposable","once","listener","thisArgs","didFire","snapshot","each","reduce","merge","initial","output","emitter","onFirstListenerAdd","onLastListenerRemove","latch","cache","firstCall","shouldEmit","signal","any","events","lifecycle","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","_output","stopwatch","Date","getTime","_","buffer","_buffer","flush","onFirstListenerDidAdd","ChainableEvent","on","chain","fromNodeEventEmitter","eventName","removeListener","fromPromise","toPromise","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","clear","check","listenerCount","threshold","Map","stack","split","join","count","topStack_1","topCount_1","Emitter","options","_disposed","_options","_leakageMon","_event","_listeners","linkedList","firstListener","removeMonitor","remove","onListenerDidAdd","size","_noop","_deliveryQueue","iter","shift","event_1","errors","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","pause","resume","toArray","EventMultiplexer","hasListeners","add","hook","didCall","functional_once","unhook","splice","buffers","wrapEvent","bufferEvents","pop","Relay","listening","inputEvent","inputEventListener","LinkedList","_iterator_js__WEBPACK_IMPORTED_MODULE_0__","Node","Undefined","prev","_first","_last","_size","unshift","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","node","anchor","g","CharacterClassifier","CharacterSet","_uint_js__WEBPACK_IMPORTED_MODULE_0__","_defaultValue","_asciiMap","_createAsciiMap","_map","asciiMap","charCode","_actual","has","Token","TokenizationResult","TokenizationResult2","offset","type","language","tokens","endState","isFalsyOrWhitespace","pad","format","escape","escapeRegExpCharacters","trim","ltrim","rtrim","convertSimple2RegExpPattern","startsWith","endsWith","createRegExp","regExpLeadsToEndlessLoop","regExpFlags","firstNonWhitespaceIndex","getLeadingWhitespace","lastNonWhitespaceIndex","compare","isLowerAsciiLetter","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","commonPrefixLength","commonSuffixLength","isHighSurrogate","isLowSurrogate","containsRTL","containsEmoji","isBasicASCII","containsFullWidthCharacter","isFullWidthCharacter","UTF8_BOM_CHARACTER","startsWithUTF8BOM","safeBtoa","repeat","char","reverse","_formatRegexp","group","parseInt","isNaN","haystack","needle","needleLen","haystackLen","lastIndexOf","pattern","diff","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","RegExp","regexp","lastIndex","ignoreCase","chCode","startIndex","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","abs","candidate","candidateLength","aLastIndex","bLastIndex","CONTAINS_RTL","CONTAINS_EMOJI","IS_BASIC_ASCII","btoa","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","getWordAtText","allowInWords","USUAL_WORD_SEPARATORS_1","sep","createWordRegExp","wordDefinition","flags","text","textOffset","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Debug","Assert","condition","message","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","changes","ComputeDiffRecursive","PrettifyChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","diagonal","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","matchLengthOfLongest","temp","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","Position","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","isIPosition","PrefixSumComputer","PrefixSumComputerWithCache","_core_uint_js__WEBPACK_IMPORTED_MODULE_0__","PrefixSumIndexOfResult","remainder","prefixSum","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","low","high","mid","midStop","midStart","_cacheAccumulatedValueStart","_cache","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","onUnexpectedError","onUnexpectedExternalError","transformErrorForSerialization","isPromiseCanceledError","canceled","illegalArgument","illegalState","errorHandler","ErrorHandler","listeners","unexpectedErrorHandler","emit","error","$isError","stacktrace","canceledName","logOnceWebWorkerWarning","SimpleWorkerClient","SimpleWorkerServer","_lifecycle_js__WEBPACK_IMPORTED_MODULE_1__","_platform_js__WEBPACK_IMPORTED_MODULE_2__","_types_js__WEBPACK_IMPORTED_MODULE_3__","INITIALIZE","webWorkerWarningLogged","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","req","_send","vsWorker","handleMessage","serializedMessage","JSON","_handleMessage","seq","replyMessage","reply","requestMessage","detail","strMsg","stringify","workerFactory","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","require","getConfig","requirejs","contexts","config","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","postSerializedMessage","requestHandler","_requestHandler","loaderConfig","methods","prop","baseUrl","paths","vs","catchError","handlerModule","_b","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","marker","runClearTimeout","Item","title","browser","env","argv","version","versions","addListener","off","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","isWindows","isMacintosh","isLinux","isNative","isWeb","globals","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","isElectronRenderer","electron","navigator","platform","rawNlsConfig","nlsConfig","resolved","availableLanguages","locale","_translationsConfigFile","userAgent","_setImmediate","createMonacoBaseAPI","_base_common_cancellation_js__WEBPACK_IMPORTED_MODULE_1__","_base_common_event_js__WEBPACK_IMPORTED_MODULE_2__","_base_common_keyCodes_js__WEBPACK_IMPORTED_MODULE_3__","_base_common_uri_js__WEBPACK_IMPORTED_MODULE_4__","_core_position_js__WEBPACK_IMPORTED_MODULE_5__","_core_range_js__WEBPACK_IMPORTED_MODULE_6__","_core_selection_js__WEBPACK_IMPORTED_MODULE_7__","_core_token_js__WEBPACK_IMPORTED_MODULE_8__","_standaloneEnums_js__WEBPACK_IMPORTED_MODULE_9__","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","editor","languages","Selection","Uri","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","strings","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","mirrorTextModel_MirrorTextModel","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","core_position","_ensureLineStarts","eolLength","linesLength","lineStartValues","prefixSumComputer","_setLineText","lineIndex","insertText","insertLines","newLengths","linkComputer_StateMachine","StateMachine","edges","maxCharCode","maxState","to","states","uint","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","characterClassifier","getClassifier","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","editorSimpleWorker_EditorSimpleWorkerImpl","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","wordHelper","core_range","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","EditorSimpleWorkerImpl","foreignModuleFactory","_models","_getModel","_getModels","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","BaseEditorSimpleWorker","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","arrays","_diffLimit","editOffset","newEdit","textualSuggest","wordDef","wordDefFlags","seen","suggestions","wordDefRegExp","wordUntil","wordAt","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","types","fmr","monaco","standaloneBase","tail","tail2","one","itemEquals","binarySearch","comparator","comp","findFirstInSorted","mergeSort","_sort","lo","hi","aux","leftIdx","rightIdx","_merge","groupBy","currentGroup","coalesce","isFalsyOrEmpty","isNonEmptyArray","distinct","keyFn","elem","distinctES6","Set","firstIndex","notFoundValue","flatten","arrayInsert","target","insertArr","before","after","pushToStart","pushToEnd","asArray","x","isString","isObject","isNumber","isBoolean","isUndefined","isUndefinedOrNull","isEmptyObject","isFunction","validateConstraints","getAllPropertyNames","withNullAsUndefined","withUndefinedAsNull","_typeof","number","string","function","constraints","validateConstraint","constraint","proto","getOwnPropertyNames","_range_js__WEBPACK_IMPORTED_MODULE_1__","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction"],"mappings":"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","file":"monaco-editor/editor/editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 156);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        if (a && b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                var aStartColumn = a.startColumn | 0;\n                var bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    var aEndLineNumber = a.endLineNumber | 0;\n                    var bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        var aEndColumn = a.endColumn | 0;\n                        var bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        var aExists = (a ? 1 : 0);\n        var bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","export function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n        this._lifecycle_disposable_isDisposed = false;\n    }\n    Disposable.prototype.dispose = function () {\n        this._lifecycle_disposable_isDisposed = true;\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        if (this._lifecycle_disposable_isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\nexport { Disposable };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme) {\n        if (_strict || _throwOnMissingSchema) {\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n        else {\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (_strict || _throwOnMissingSchema) {\n        return scheme || _empty;\n    }\n    if (!scheme) {\n        console.trace('BAD uri lacks scheme, falling back to file-scheme.');\n        scheme = 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    SimpleKeybinding.prototype.toChord = function () {\n        return new ChordKeybinding([this]);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(\"parts\");\n        }\n        this.parts = parts;\n    }\n    ChordKeybinding.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.parts.length !== other.parts.length) {\n            return false;\n        }\n        for (var i = 0; i < this.parts.length; i++) {\n            if (!this.parts[i].equals(other.parts[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var FIN = { done: true, value: undefined };\nexport var Iterator;\n(function (Iterator) {\n    var _empty = {\n        next: function () {\n            return FIN;\n        }\n    };\n    function empty() {\n        return _empty;\n    }\n    Iterator.empty = empty;\n    function fromArray(array, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = array.length; }\n        return {\n            next: function () {\n                if (index >= length) {\n                    return FIN;\n                }\n                return { done: false, value: array[index++] };\n            }\n        };\n    }\n    Iterator.fromArray = fromArray;\n    function from(elements) {\n        if (!elements) {\n            return Iterator.empty();\n        }\n        else if (Array.isArray(elements)) {\n            return Iterator.fromArray(elements);\n        }\n        else {\n            return elements;\n        }\n    }\n    Iterator.from = from;\n    function map(iterator, fn) {\n        return {\n            next: function () {\n                var element = iterator.next();\n                if (element.done) {\n                    return FIN;\n                }\n                else {\n                    return { done: false, value: fn(element.value) };\n                }\n            }\n        };\n    }\n    Iterator.map = map;\n    function filter(iterator, fn) {\n        return {\n            next: function () {\n                while (true) {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return FIN;\n                    }\n                    if (fn(element.value)) {\n                        return { done: false, value: element.value };\n                    }\n                }\n            }\n        };\n    }\n    Iterator.filter = filter;\n    function forEach(iterator, fn) {\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\n            fn(next.value);\n        }\n    }\n    Iterator.forEach = forEach;\n    function collect(iterator) {\n        var result = [];\n        forEach(iterator, function (value) { return result.push(value); });\n        return result;\n    }\n    Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\nexport function getSequenceIterator(arg) {\n    if (Array.isArray(arg)) {\n        return Iterator.fromArray(arg);\n    }\n    else {\n        return arg;\n    }\n}\nvar ArrayIterator = /** @class */ (function () {\n    function ArrayIterator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    ArrayIterator.prototype.next = function () {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    };\n    ArrayIterator.prototype.current = function () {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    };\n    return ArrayIterator;\n}());\nexport { ArrayIterator };\nvar ArrayNavigator = /** @class */ (function (_super) {\n    __extends(ArrayNavigator, _super);\n    function ArrayNavigator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        return _super.call(this, items, start, end, index) || this;\n    }\n    ArrayNavigator.prototype.current = function () {\n        return _super.prototype.current.call(this);\n    };\n    ArrayNavigator.prototype.previous = function () {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    };\n    ArrayNavigator.prototype.first = function () {\n        this.index = this.start;\n        return this.current();\n    };\n    ArrayNavigator.prototype.last = function () {\n        this.index = this.end - 1;\n        return this.current();\n    };\n    ArrayNavigator.prototype.parent = function () {\n        return null;\n    };\n    return ArrayNavigator;\n}(ArrayIterator));\nexport { ArrayNavigator };\nvar MappedIterator = /** @class */ (function () {\n    function MappedIterator(iterator, fn) {\n        this.iterator = iterator;\n        this.fn = fn;\n        // noop\n    }\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n    return MappedIterator;\n}());\nexport { MappedIterator };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            // we need this, in case the event fires during the listener call\n            var didFire = false;\n            var result;\n            result = event(function (e) {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * throught the mapping function.\n     */\n    function map(event, map) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        });\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n        });\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        });\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    /**\n     * Given a collection of events, returns a single event which emits\n     * whenever any of the provided events emit.\n     */\n    function any() {\n        var events = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            events[_i] = arguments[_i];\n        }\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n        };\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        var output = initial;\n        return map(event, function (e) {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        var listener;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove: function () {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\n        if (delay === void 0) { delay = 100; }\n        if (leading === void 0) { leading = false; }\n        var subscription;\n        var output = undefined;\n        var handle = undefined;\n        var numDebouncedCalls = 0;\n        var emitter = new Emitter({\n            leakWarningThreshold: leakWarningThreshold,\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        var start = new Date().getTime();\n        return map(once(event), function (_) { return new Date().getTime() - start; });\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        var firstCall = true;\n        var cache;\n        return filter(event, function (value) {\n            var shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick, _buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (_buffer === void 0) { _buffer = []; }\n        var buffer = _buffer.slice();\n        var listener = event(function (e) {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        var flush = function () {\n            if (buffer) {\n                buffer.forEach(function (e) { return emitter.fire(e); });\n            }\n            buffer = null;\n        };\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                if (!listener) {\n                    listener = event(function (e) { return emitter.fire(e); });\n                }\n            },\n            onFirstListenerDidAdd: function () {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove: function () {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    var ChainableEvent = /** @class */ (function () {\n        function ChainableEvent(event) {\n            this.event = event;\n        }\n        ChainableEvent.prototype.map = function (fn) {\n            return new ChainableEvent(map(this.event, fn));\n        };\n        ChainableEvent.prototype.forEach = function (fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        };\n        ChainableEvent.prototype.filter = function (fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        };\n        ChainableEvent.prototype.reduce = function (merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        };\n        ChainableEvent.prototype.latch = function () {\n            return new ChainableEvent(latch(this.event));\n        };\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        };\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        };\n        return ChainableEvent;\n    }());\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map) {\n        if (map === void 0) { map = function (id) { return id; }; }\n        var fn = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return result.fire(map.apply(void 0, args));\n        };\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromPromise(promise) {\n        var emitter = new Emitter();\n        var shouldEmit = false;\n        promise\n            .then(undefined, function () { return null; })\n            .then(function () {\n            if (!shouldEmit) {\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(function (c) { return once(event)(c); });\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nvar _globalLeakWarningThreshold = -1;\nvar LeakageMonitor = /** @class */ (function () {\n    function LeakageMonitor(customThreshold, name) {\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    LeakageMonitor.prototype.dispose = function () {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    };\n    LeakageMonitor.prototype.check = function (listenerCount) {\n        var _this = this;\n        var threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        var count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            var topStack_1;\n            var topCount_1 = 0;\n            this._stacks.forEach(function (count, stack) {\n                if (!topStack_1 || topCount_1 < count) {\n                    topStack_1 = stack;\n                    topCount_1 = count;\n                }\n            });\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n            console.warn(topStack_1);\n        }\n        return function () {\n            var count = (_this._stacks.get(stack) || 0);\n            _this._stacks.set(stack, count - 1);\n        };\n    };\n    return LeakageMonitor;\n}());\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(options) {\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n            : undefined;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    // check and record this emitter for potential leakage\n                    var removeMonitor;\n                    if (_this._leakageMon) {\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            if (removeMonitor) {\n                                removeMonitor();\n                            }\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove) {\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                    if (!hasListeners) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new LinkedList();\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.size > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners.clear();\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.clear();\n        }\n        if (this._leakageMon) {\n            this._leakageMon.dispose();\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar PauseableEmitter = /** @class */ (function (_super) {\n    __extends(PauseableEmitter, _super);\n    function PauseableEmitter(options) {\n        var _this = _super.call(this, options) || this;\n        _this._isPaused = 0;\n        _this._eventQueue = new LinkedList();\n        _this._mergeFn = options && options.merge;\n        return _this;\n    }\n    PauseableEmitter.prototype.pause = function () {\n        this._isPaused++;\n    };\n    PauseableEmitter.prototype.resume = function () {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                var events = this._eventQueue.toArray();\n                this._eventQueue.clear();\n                _super.prototype.fire.call(this, this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    _super.prototype.fire.call(this, this._eventQueue.shift());\n                }\n            }\n        }\n    };\n    PauseableEmitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                _super.prototype.fire.call(this, event);\n            }\n        }\n    };\n    return PauseableEmitter;\n}(Emitter));\nexport { PauseableEmitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        var r = fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n        return r;\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        var _this = this;\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: function () {\n                _this.listening = true;\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n            },\n            onLastListenerRemove: function () {\n                _this.listening = false;\n                _this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.inputEvent = event;\n            if (this.listening) {\n                this.inputEventListener.dispose();\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FIN } from './iterator.js';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n    Node.Undefined = new Node(undefined);\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return this._first === Node.Undefined;\n    };\n    LinkedList.prototype.clear = function () {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var _this = this;\n        var newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        var didRemove = false;\n        return function () {\n            if (!didRemove) {\n                didRemove = true;\n                _this._remove(newNode);\n            }\n        };\n    };\n    LinkedList.prototype.shift = function () {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            var anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (node === Node.Undefined) {\n                    return FIN;\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    LinkedList.prototype.toArray = function () {\n        var result = [];\n        for (var node = this._first; node !== Node.Undefined; node = node.next) {\n            result.push(node.element);\n        }\n        return result;\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.PrettifyChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex = 0, modifiedIndex = 0;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\n        // Shift all the changes down first\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            var mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            var result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            var result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new postion from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    Position.prototype.with = function (newLineNumber, newColumn) {\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n        if (newColumn === void 0) { newColumn = this.column; }\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    };\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n        if (deltaColumn === void 0) { deltaColumn = 0; }\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    };\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid = 0;\n        var midStop = 0;\n        var midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { getAllPropertyNames } from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var _this = this;\n        var req = String(++this._lastSentReq);\n        return new Promise(function (resolve, reject) {\n            _this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            _this._send({\n                vsWorker: _this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n            return;\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return Promise.resolve(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._lazyProxy = new Promise(function (resolve, reject) {\n            lazyProxyReject = reject;\n            _this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                    var methodName = availableMethods_1[_i];\n                    proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                }\n                resolve(proxy);\n            }, function (e) {\n                reject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        return this._lazyProxy;\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._requestHandler); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise(function (resolve, reject) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                if (!_this._requestHandler) {\n                    reject(new Error(\"No RequestHandler!\"));\n                    return;\n                }\n                var methods = [];\n                for (var _a = 0, _b = getAllPropertyNames(_this._requestHandler); _a < _b.length; _a++) {\n                    var prop = _b[_a];\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                resolve(methods);\n            }, reject);\n        });\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nelse if (typeof process === 'object') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = 1 /* Mac */;\n    }\n    else if (_isWindows) {\n        _platform = 3 /* Windows */;\n    }\n    else if (_isLinux) {\n        _platform = 2 /* Linux */;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './promise-polyfill/polyfill.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\nexport { StateMachine };\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model, stateMachine) {\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = void 0;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\nexport { LinkComputer };\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { mergeSort } from '../../../base/common/arrays.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { FIN } from '../../../base/common/iterator.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { getAllPropertyNames } from '../../../base/common/types.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj;\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                if (!obj) {\n                    obj = { done: false, value: value };\n                }\n                else {\n                    obj.value = value;\n                }\n                return obj;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                return FIN;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n        var content = this._lines[lineNumber - 1];\n        var ranges = this._wordenize(content, wordDefinition);\n        var words = [];\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n            var range = ranges_1[_i];\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return Promise.resolve(null);\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        var changes = diffComputer.computeDiff();\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n        return Promise.resolve({\n            identical: identical,\n            changes: changes\n        });\n    };\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n        var originalLineCount = original.getLineCount();\n        var modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (var line = 1; line <= originalLineCount; line++) {\n            var originalLine = original.getLineContent(line);\n            var modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(edits);\n        }\n        var result = [];\n        var lastEol = undefined;\n        edits = mergeSort(edits, function (a, b) {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            var aRng = a.range ? 0 : 1;\n            var bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return Promise.resolve(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var seen = Object.create(null);\n        var suggestions = [];\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var wordUntil = model.getWordUntilPosition(position, wordDefRegExp);\n        var wordAt = model.getWordAtPosition(position, wordDefRegExp);\n        if (wordAt) {\n            seen[model.getValueInRange(wordAt)] = true;\n        }\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n            var word = e.value;\n            if (seen[word]) {\n                continue;\n            }\n            seen[word] = true;\n            if (!isNaN(Number(word))) {\n                continue;\n            }\n            suggestions.push({\n                kind: 18 /* Text */,\n                label: word,\n                insertText: word,\n                range: { startLineNumber: position.lineNumber, startColumn: wordUntil.startColumn, endLineNumber: position.lineNumber, endColumn: wordUntil.endColumn }\n            });\n        }\n        return Promise.resolve({ suggestions: suggestions });\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(Object.create(null));\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var result = Object.create(null);\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n            var words = model.getLineWords(line, wordDefRegExp);\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                var word = words_1[_i];\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                var array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    //#endregion\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return Promise.resolve(null);\n        }\n        var word = model.getValueInRange(wordRange);\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return Promise.resolve(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._foreignModule); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tresolve(methods);\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 100000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n) {\n    if (n === void 0) { n = 0; }\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals) {\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort(data, compare) {\n    _sort(data, compare, 0, data.length - 1, []);\n    return data;\n}\nfunction _merge(a, compare, lo, mid, hi, aux) {\n    var leftIdx = lo, rightIdx = mid + 1;\n    for (var i = lo; i <= hi; i++) {\n        aux[i] = a[i];\n    }\n    for (var i = lo; i <= hi; i++) {\n        if (leftIdx > mid) {\n            // left side consumed\n            a[i] = aux[rightIdx++];\n        }\n        else if (rightIdx > hi) {\n            // right side consumed\n            a[i] = aux[leftIdx++];\n        }\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n            // right element is less -> comes first\n            a[i] = aux[rightIdx++];\n        }\n        else {\n            // left element comes first (less or equal)\n            a[i] = aux[leftIdx++];\n        }\n    }\n}\nfunction _sort(a, compare, lo, hi, aux) {\n    if (hi <= lo) {\n        return;\n    }\n    var mid = lo + ((hi - lo) / 2) | 0;\n    _sort(a, compare, lo, mid, aux);\n    _sort(a, compare, mid + 1, hi, aux);\n    if (compare(a[mid], a[mid + 1]) <= 0) {\n        // left and right are sorted and if the last-left element is less\n        // or equals than the first-right element there is nothing else\n        // to do\n        return;\n    }\n    _merge(a, compare, lo, mid, hi, aux);\n}\nexport function groupBy(data, compare) {\n    var result = [];\n    var currentGroup = undefined;\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    if (!array) {\n        return array;\n    }\n    return array.filter(function (e) { return !!e; });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct(array, keyFn) {\n    if (!keyFn) {\n        return array.filter(function (element, position) {\n            return array.indexOf(element) === position;\n        });\n    }\n    var seen = Object.create(null);\n    return array.filter(function (elem) {\n        var key = keyFn(elem);\n        if (seen[key]) {\n            return false;\n        }\n        seen[key] = true;\n        return true;\n    });\n}\nexport function distinctES6(array) {\n    var seen = new Set();\n    return array.filter(function (element) {\n        if (seen.has(element)) {\n            return false;\n        }\n        seen.add(element);\n        return true;\n    });\n}\nexport function firstIndex(array, fn) {\n    for (var i = 0; i < array.length; i++) {\n        var element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function first(array, fn, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = undefined; }\n    var index = firstIndex(array, fn);\n    return index < 0 ? notFoundValue : array[index];\n}\nexport function flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\nexport function range(arg, to) {\n    var from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    var result = [];\n    if (from <= to) {\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (var i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    var before = target.slice(0, insertIndex);\n    var after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    var index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    var index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    if (typeof (str) === _typeof.string || str instanceof String) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === _typeof.object\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return typeof (obj) === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return typeof obj === _typeof.function;\n}\nexport function validateConstraints(args, constraints) {\n    var len = Math.min(args.length, constraints.length);\n    for (var i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n    }\n}\nexport function getAllPropertyNames(obj) {\n    var res = [];\n    var proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull(x) {\n    return typeof x === 'undefined' ? null : x;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n"],"sourceRoot":""}