{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","Range","_position_js__WEBPACK_IMPORTED_MODULE_0__","startLineNumber","startColumn","endLineNumber","endColumn","this","isEmpty","range","containsPosition","position","lineNumber","column","containsRange","otherRange","plusRange","a","b","Math","min","max","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","other","getEndPosition","getStartPosition","toString","setEndPosition","setStartPosition","collapseToStart","fromPositions","start","end","lift","isIRange","obj","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","isDisposable","thing","dispose","length","first","rest","_i","arguments","Array","isArray","forEach","combinedDisposable","disposables","toDisposable","fn","Disposable","ImmortalReference","_toDispose","_lifecycle_disposable_isDisposed","_register","console","warn","push","None","freeze","URI","extendStatics","_a","_platform_js__WEBPACK_IMPORTED_MODULE_0__","__extends","setPrototypeOf","__proto__","__","constructor","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_empty","_slash","_regexp","schemeOrData","authority","path","query","fragment","_strict","scheme","trace","_schemeFix","_referenceResolution","ret","Error","test","_validateUri","isUri","fsPath","with","_makeFsPath","configurable","change","undefined","_URI","parse","match","exec","decodeURIComponent","file","replace","idx","indexOf","substring","from","components","skipEncoding","_asFormatted","toJSON","revive","data","result","_fsPath","_formatted","external","_super","_this","apply","res","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","code","charCodeAt","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","String","fromCharCode","setImmediate","global","finallyConstructor","callback","then","resolve","reason","reject","setTimeoutFunc","setTimeout","noop","Promise","TypeError","_state","_handled","_value","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","e","promise","newValue","finale","thisArg","_unhandledRejectionFn","len","Handler","done","ex","prom","all","arr","args","slice","remaining","val","race","values","err","globalNS","window","factory","CancellationToken","CancellationTokenSource","_event_js__WEBPACK_IMPORTED_MODULE_0__","shortcutEvent","context","clearTimeout","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","fire","event","parent","_token","_parentListener","scope","Function","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","process","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","random","source","addEventListener","attachEvent","task","run","KeyCodeUtils","KeyChord","createKeybinding","SimpleKeybinding","ResolvedKeybindingPart","ResolvedKeybinding","_errors_js__WEBPACK_IMPORTED_MODULE_0__","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","str","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","firstPart","secondPart","keybinding","OS","chordPart","ChordKeybinding","createSimpleKeybinding","ctrlCmd","winCtrl","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","ctrlKey","shiftKey","altKey","metaKey","equals","isModifierKey","toChord","isDuplicateModifierCase","parts","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","FIN","Iterator","getSequenceIterator","ArrayIterator","ArrayNavigator","MappedIterator","arg","fromArray","next","iterator","empty","array","index","elements","map","element","filter","collect","items","current","previous","last","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","event_Event","event_Emitter","event_PauseableEmitter","event_EventMultiplexer","EventBufferer","event_Relay","Event","_disposable","once","listener","thisArgs","didFire","snapshot","each","reduce","merge","initial","output","emitter","onFirstListenerAdd","onLastListenerRemove","latch","cache","firstCall","shouldEmit","signal","any","events","lifecycle","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","_output","stopwatch","Date","getTime","_","buffer","_buffer","flush","onFirstListenerDidAdd","ChainableEvent","on","chain","fromNodeEventEmitter","eventName","removeListener","fromPromise","toPromise","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","clear","check","listenerCount","threshold","Map","stack","split","join","count","set","topStack_1","topCount_1","Emitter","options","_disposed","_options","_leakageMon","_event","_listeners","linkedList","firstListener","removeMonitor","remove","onListenerDidAdd","size","_noop","_deliveryQueue","iter","shift","event_1","errors","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","pause","resume","toArray","EventMultiplexer","hasListeners","add","hook","didCall","functional_once","unhook","splice","buffers","wrapEvent","bufferEvents","pop","Relay","listening","inputEvent","inputEventListener","Uint8Matrix","toUint8","toUint32","toUint32Array","rows","cols","defaultValue","Uint8Array","_data","row","col","v","Uint32Array","initialize","_base_common_worker_simpleWorker_js__WEBPACK_IMPORTED_MODULE_0__","_common_services_editorSimpleWorker_js__WEBPACK_IMPORTED_MODULE_1__","initialized","foreignModule","editorWorker","simpleWorker","msg","isFalsyOrWhitespace","pad","format","escape","escapeRegExpCharacters","trim","ltrim","rtrim","convertSimple2RegExpPattern","startsWith","endsWith","createRegExp","regExpLeadsToEndlessLoop","regExpFlags","firstNonWhitespaceIndex","getLeadingWhitespace","lastNonWhitespaceIndex","compare","isLowerAsciiLetter","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","commonPrefixLength","commonSuffixLength","isHighSurrogate","isLowSurrogate","containsRTL","containsEmoji","isBasicASCII","containsFullWidthCharacter","isFullWidthCharacter","UTF8_BOM_CHARACTER","startsWithUTF8BOM","safeBtoa","repeat","char","reverse","_formatRegexp","group","parseInt","isNaN","haystack","needle","needleLen","offset","haystackLen","lastIndexOf","pattern","diff","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","RegExp","regexp","lastIndex","ignoreCase","chCode","startIndex","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","abs","candidate","candidateLength","aLastIndex","bLastIndex","charCode","CONTAINS_RTL","CONTAINS_EMOJI","IS_BASIC_ASCII","btoa","CharacterClassifier","CharacterSet","_uint_js__WEBPACK_IMPORTED_MODULE_0__","_defaultValue","_asciiMap","_createAsciiMap","_map","asciiMap","_actual","has","Token","TokenizationResult","TokenizationResult2","type","language","tokens","endState","LinkedList","_iterator_js__WEBPACK_IMPORTED_MODULE_0__","Node","Undefined","prev","_first","_last","_size","unshift","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","node","anchor","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","getWordAtText","allowInWords","USUAL_WORD_SEPARATORS_1","sep","createWordRegExp","wordDefinition","flags","text","textOffset","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","g","Position","newLineNumber","newColumn","delta","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","isIPosition","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Debug","Assert","condition","message","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","changes","ComputeDiffRecursive","PrettifyChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","diagonal","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","matchLengthOfLongest","temp","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","onUnexpectedError","onUnexpectedExternalError","transformErrorForSerialization","isPromiseCanceledError","canceled","illegalArgument","illegalState","errorHandler","ErrorHandler","listeners","unexpectedErrorHandler","emit","error","$isError","stacktrace","canceledName","isWindows","isMacintosh","isLinux","isNative","isWeb","globals","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","isElectronRenderer","versions","electron","navigator","platform","rawNlsConfig","env","nlsConfig","JSON","resolved","availableLanguages","locale","_translationsConfigFile","userAgent","_setImmediate","PrefixSumComputer","PrefixSumComputerWithCache","_core_uint_js__WEBPACK_IMPORTED_MODULE_0__","PrefixSumIndexOfResult","remainder","prefixSum","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","low","high","mid","midStop","midStart","_cacheAccumulatedValueStart","_cache","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","logOnceWebWorkerWarning","SimpleWorkerClient","SimpleWorkerServer","_lifecycle_js__WEBPACK_IMPORTED_MODULE_1__","_platform_js__WEBPACK_IMPORTED_MODULE_2__","_types_js__WEBPACK_IMPORTED_MODULE_3__","INITIALIZE","webWorkerWarningLogged","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","req","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","seq","replyMessage","reply","requestMessage","detail","strMsg","stringify","workerFactory","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","require","getConfig","requirejs","contexts","config","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","postSerializedMessage","requestHandler","_requestHandler","loaderConfig","methods","prop","baseUrl","paths","vs","catchError","handlerModule","_b","tail","tail2","one","itemEquals","binarySearch","comparator","comp","findFirstInSorted","mergeSort","_sort","lo","hi","aux","leftIdx","rightIdx","_merge","groupBy","currentGroup","coalesce","isFalsyOrEmpty","isNonEmptyArray","distinct","keyFn","seen","elem","distinctES6","Set","firstIndex","notFoundValue","flatten","concat","to","arrayInsert","target","insertArr","before","after","pushToStart","pushToEnd","asArray","x","isString","isObject","isNumber","isBoolean","isUndefined","isUndefinedOrNull","isEmptyObject","isFunction","validateConstraints","getAllPropertyNames","withNullAsUndefined","withUndefinedAsNull","_typeof","number","string","function","constraints","validateConstraint","constraint","proto","getOwnPropertyNames","createMonacoBaseAPI","_base_common_cancellation_js__WEBPACK_IMPORTED_MODULE_1__","_base_common_event_js__WEBPACK_IMPORTED_MODULE_2__","_base_common_keyCodes_js__WEBPACK_IMPORTED_MODULE_3__","_base_common_uri_js__WEBPACK_IMPORTED_MODULE_4__","_core_position_js__WEBPACK_IMPORTED_MODULE_5__","_core_range_js__WEBPACK_IMPORTED_MODULE_6__","_core_selection_js__WEBPACK_IMPORTED_MODULE_7__","_core_token_js__WEBPACK_IMPORTED_MODULE_8__","_standaloneEnums_js__WEBPACK_IMPORTED_MODULE_9__","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","editor","languages","Selection","Uri","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","title","browser","argv","version","addListener","off","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","_range_js__WEBPACK_IMPORTED_MODULE_1__","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","strings","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","mirrorTextModel_MirrorTextModel","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","core_position","_ensureLineStarts","eolLength","linesLength","lineStartValues","prefixSumComputer","_setLineText","lineIndex","insertText","insertLines","newLengths","linkComputer_StateMachine","StateMachine","edges","maxCharCode","maxState","states","uint","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","characterClassifier","getClassifier","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","editorSimpleWorker_EditorSimpleWorkerImpl","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","wordHelper","core_range","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","EditorSimpleWorkerImpl","foreignModuleFactory","_models","_getModel","_getModels","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","BaseEditorSimpleWorker","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","arrays","_diffLimit","editOffset","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","wordUntil","wordAt","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","types","fmr","monaco","standaloneBase"],"mappings":"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","file":"monaco-editor/editor/editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 279);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        if (a && b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                var aStartColumn = a.startColumn | 0;\n                var bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    var aEndLineNumber = a.endLineNumber | 0;\n                    var bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        var aEndColumn = a.endColumn | 0;\n                        var bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        var aExists = (a ? 1 : 0);\n        var bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","export function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n        this._lifecycle_disposable_isDisposed = false;\n    }\n    Disposable.prototype.dispose = function () {\n        this._lifecycle_disposable_isDisposed = true;\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        if (this._lifecycle_disposable_isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\nexport { Disposable };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme) {\n        if (_strict || _throwOnMissingSchema) {\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n        else {\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (_strict || _throwOnMissingSchema) {\n        return scheme || _empty;\n    }\n    if (!scheme) {\n        console.trace('BAD uri lacks scheme, falling back to file-scheme.');\n        scheme = 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    SimpleKeybinding.prototype.toChord = function () {\n        return new ChordKeybinding([this]);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(\"parts\");\n        }\n        this.parts = parts;\n    }\n    ChordKeybinding.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.parts.length !== other.parts.length) {\n            return false;\n        }\n        for (var i = 0; i < this.parts.length; i++) {\n            if (!this.parts[i].equals(other.parts[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var FIN = { done: true, value: undefined };\nexport var Iterator;\n(function (Iterator) {\n    var _empty = {\n        next: function () {\n            return FIN;\n        }\n    };\n    function empty() {\n        return _empty;\n    }\n    Iterator.empty = empty;\n    function fromArray(array, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = array.length; }\n        return {\n            next: function () {\n                if (index >= length) {\n                    return FIN;\n                }\n                return { done: false, value: array[index++] };\n            }\n        };\n    }\n    Iterator.fromArray = fromArray;\n    function from(elements) {\n        if (!elements) {\n            return Iterator.empty();\n        }\n        else if (Array.isArray(elements)) {\n            return Iterator.fromArray(elements);\n        }\n        else {\n            return elements;\n        }\n    }\n    Iterator.from = from;\n    function map(iterator, fn) {\n        return {\n            next: function () {\n                var element = iterator.next();\n                if (element.done) {\n                    return FIN;\n                }\n                else {\n                    return { done: false, value: fn(element.value) };\n                }\n            }\n        };\n    }\n    Iterator.map = map;\n    function filter(iterator, fn) {\n        return {\n            next: function () {\n                while (true) {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return FIN;\n                    }\n                    if (fn(element.value)) {\n                        return { done: false, value: element.value };\n                    }\n                }\n            }\n        };\n    }\n    Iterator.filter = filter;\n    function forEach(iterator, fn) {\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\n            fn(next.value);\n        }\n    }\n    Iterator.forEach = forEach;\n    function collect(iterator) {\n        var result = [];\n        forEach(iterator, function (value) { return result.push(value); });\n        return result;\n    }\n    Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\nexport function getSequenceIterator(arg) {\n    if (Array.isArray(arg)) {\n        return Iterator.fromArray(arg);\n    }\n    else {\n        return arg;\n    }\n}\nvar ArrayIterator = /** @class */ (function () {\n    function ArrayIterator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    ArrayIterator.prototype.next = function () {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    };\n    ArrayIterator.prototype.current = function () {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    };\n    return ArrayIterator;\n}());\nexport { ArrayIterator };\nvar ArrayNavigator = /** @class */ (function (_super) {\n    __extends(ArrayNavigator, _super);\n    function ArrayNavigator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        return _super.call(this, items, start, end, index) || this;\n    }\n    ArrayNavigator.prototype.current = function () {\n        return _super.prototype.current.call(this);\n    };\n    ArrayNavigator.prototype.previous = function () {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    };\n    ArrayNavigator.prototype.first = function () {\n        this.index = this.start;\n        return this.current();\n    };\n    ArrayNavigator.prototype.last = function () {\n        this.index = this.end - 1;\n        return this.current();\n    };\n    ArrayNavigator.prototype.parent = function () {\n        return null;\n    };\n    return ArrayNavigator;\n}(ArrayIterator));\nexport { ArrayNavigator };\nvar MappedIterator = /** @class */ (function () {\n    function MappedIterator(iterator, fn) {\n        this.iterator = iterator;\n        this.fn = fn;\n        // noop\n    }\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n    return MappedIterator;\n}());\nexport { MappedIterator };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            // we need this, in case the event fires during the listener call\n            var didFire = false;\n            var result;\n            result = event(function (e) {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * throught the mapping function.\n     */\n    function map(event, map) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        });\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n        });\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        });\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    /**\n     * Given a collection of events, returns a single event which emits\n     * whenever any of the provided events emit.\n     */\n    function any() {\n        var events = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            events[_i] = arguments[_i];\n        }\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n        };\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        var output = initial;\n        return map(event, function (e) {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        var listener;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove: function () {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\n        if (delay === void 0) { delay = 100; }\n        if (leading === void 0) { leading = false; }\n        var subscription;\n        var output = undefined;\n        var handle = undefined;\n        var numDebouncedCalls = 0;\n        var emitter = new Emitter({\n            leakWarningThreshold: leakWarningThreshold,\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        var start = new Date().getTime();\n        return map(once(event), function (_) { return new Date().getTime() - start; });\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        var firstCall = true;\n        var cache;\n        return filter(event, function (value) {\n            var shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick, _buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (_buffer === void 0) { _buffer = []; }\n        var buffer = _buffer.slice();\n        var listener = event(function (e) {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        var flush = function () {\n            if (buffer) {\n                buffer.forEach(function (e) { return emitter.fire(e); });\n            }\n            buffer = null;\n        };\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                if (!listener) {\n                    listener = event(function (e) { return emitter.fire(e); });\n                }\n            },\n            onFirstListenerDidAdd: function () {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove: function () {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    var ChainableEvent = /** @class */ (function () {\n        function ChainableEvent(event) {\n            this.event = event;\n        }\n        ChainableEvent.prototype.map = function (fn) {\n            return new ChainableEvent(map(this.event, fn));\n        };\n        ChainableEvent.prototype.forEach = function (fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        };\n        ChainableEvent.prototype.filter = function (fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        };\n        ChainableEvent.prototype.reduce = function (merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        };\n        ChainableEvent.prototype.latch = function () {\n            return new ChainableEvent(latch(this.event));\n        };\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        };\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        };\n        return ChainableEvent;\n    }());\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map) {\n        if (map === void 0) { map = function (id) { return id; }; }\n        var fn = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return result.fire(map.apply(void 0, args));\n        };\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromPromise(promise) {\n        var emitter = new Emitter();\n        var shouldEmit = false;\n        promise\n            .then(undefined, function () { return null; })\n            .then(function () {\n            if (!shouldEmit) {\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(function (c) { return once(event)(c); });\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nvar _globalLeakWarningThreshold = -1;\nvar LeakageMonitor = /** @class */ (function () {\n    function LeakageMonitor(customThreshold, name) {\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    LeakageMonitor.prototype.dispose = function () {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    };\n    LeakageMonitor.prototype.check = function (listenerCount) {\n        var _this = this;\n        var threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        var count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            var topStack_1;\n            var topCount_1 = 0;\n            this._stacks.forEach(function (count, stack) {\n                if (!topStack_1 || topCount_1 < count) {\n                    topStack_1 = stack;\n                    topCount_1 = count;\n                }\n            });\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n            console.warn(topStack_1);\n        }\n        return function () {\n            var count = (_this._stacks.get(stack) || 0);\n            _this._stacks.set(stack, count - 1);\n        };\n    };\n    return LeakageMonitor;\n}());\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(options) {\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n            : undefined;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    // check and record this emitter for potential leakage\n                    var removeMonitor;\n                    if (_this._leakageMon) {\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            if (removeMonitor) {\n                                removeMonitor();\n                            }\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove) {\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                    if (!hasListeners) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new LinkedList();\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.size > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners.clear();\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.clear();\n        }\n        if (this._leakageMon) {\n            this._leakageMon.dispose();\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar PauseableEmitter = /** @class */ (function (_super) {\n    __extends(PauseableEmitter, _super);\n    function PauseableEmitter(options) {\n        var _this = _super.call(this, options) || this;\n        _this._isPaused = 0;\n        _this._eventQueue = new LinkedList();\n        _this._mergeFn = options && options.merge;\n        return _this;\n    }\n    PauseableEmitter.prototype.pause = function () {\n        this._isPaused++;\n    };\n    PauseableEmitter.prototype.resume = function () {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                var events = this._eventQueue.toArray();\n                this._eventQueue.clear();\n                _super.prototype.fire.call(this, this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    _super.prototype.fire.call(this, this._eventQueue.shift());\n                }\n            }\n        }\n    };\n    PauseableEmitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                _super.prototype.fire.call(this, event);\n            }\n        }\n    };\n    return PauseableEmitter;\n}(Emitter));\nexport { PauseableEmitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        var r = fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n        return r;\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        var _this = this;\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: function () {\n                _this.listening = true;\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n            },\n            onLastListenerRemove: function () {\n                _this.listening = false;\n                _this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.inputEvent = event;\n            if (this.listening) {\n                this.inputEventListener.dispose();\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FIN } from './iterator.js';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n    Node.Undefined = new Node(undefined);\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return this._first === Node.Undefined;\n    };\n    LinkedList.prototype.clear = function () {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var _this = this;\n        var newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        var didRemove = false;\n        return function () {\n            if (!didRemove) {\n                didRemove = true;\n                _this._remove(newNode);\n            }\n        };\n    };\n    LinkedList.prototype.shift = function () {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            var anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (node === Node.Undefined) {\n                    return FIN;\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    LinkedList.prototype.toArray = function () {\n        var result = [];\n        for (var node = this._first; node !== Node.Undefined; node = node.next) {\n            result.push(node.element);\n        }\n        return result;\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new postion from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    Position.prototype.with = function (newLineNumber, newColumn) {\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n        if (newColumn === void 0) { newColumn = this.column; }\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    };\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n        if (deltaColumn === void 0) { deltaColumn = 0; }\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    };\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.PrettifyChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex = 0, modifiedIndex = 0;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\n        // Shift all the changes down first\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            var mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            var result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            var result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nelse if (typeof process === 'object') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = 1 /* Mac */;\n    }\n    else if (_isWindows) {\n        _platform = 3 /* Windows */;\n    }\n    else if (_isLinux) {\n        _platform = 2 /* Linux */;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid = 0;\n        var midStop = 0;\n        var midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { getAllPropertyNames } from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var _this = this;\n        var req = String(++this._lastSentReq);\n        return new Promise(function (resolve, reject) {\n            _this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            _this._send({\n                vsWorker: _this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n            return;\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return Promise.resolve(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._lazyProxy = new Promise(function (resolve, reject) {\n            lazyProxyReject = reject;\n            _this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                    var methodName = availableMethods_1[_i];\n                    proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                }\n                resolve(proxy);\n            }, function (e) {\n                reject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        return this._lazyProxy;\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._requestHandler); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise(function (resolve, reject) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                if (!_this._requestHandler) {\n                    reject(new Error(\"No RequestHandler!\"));\n                    return;\n                }\n                var methods = [];\n                for (var _a = 0, _b = getAllPropertyNames(_this._requestHandler); _a < _b.length; _a++) {\n                    var prop = _b[_a];\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                resolve(methods);\n            }, reject);\n        });\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n) {\n    if (n === void 0) { n = 0; }\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals) {\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort(data, compare) {\n    _sort(data, compare, 0, data.length - 1, []);\n    return data;\n}\nfunction _merge(a, compare, lo, mid, hi, aux) {\n    var leftIdx = lo, rightIdx = mid + 1;\n    for (var i = lo; i <= hi; i++) {\n        aux[i] = a[i];\n    }\n    for (var i = lo; i <= hi; i++) {\n        if (leftIdx > mid) {\n            // left side consumed\n            a[i] = aux[rightIdx++];\n        }\n        else if (rightIdx > hi) {\n            // right side consumed\n            a[i] = aux[leftIdx++];\n        }\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n            // right element is less -> comes first\n            a[i] = aux[rightIdx++];\n        }\n        else {\n            // left element comes first (less or equal)\n            a[i] = aux[leftIdx++];\n        }\n    }\n}\nfunction _sort(a, compare, lo, hi, aux) {\n    if (hi <= lo) {\n        return;\n    }\n    var mid = lo + ((hi - lo) / 2) | 0;\n    _sort(a, compare, lo, mid, aux);\n    _sort(a, compare, mid + 1, hi, aux);\n    if (compare(a[mid], a[mid + 1]) <= 0) {\n        // left and right are sorted and if the last-left element is less\n        // or equals than the first-right element there is nothing else\n        // to do\n        return;\n    }\n    _merge(a, compare, lo, mid, hi, aux);\n}\nexport function groupBy(data, compare) {\n    var result = [];\n    var currentGroup = undefined;\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    if (!array) {\n        return array;\n    }\n    return array.filter(function (e) { return !!e; });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct(array, keyFn) {\n    if (!keyFn) {\n        return array.filter(function (element, position) {\n            return array.indexOf(element) === position;\n        });\n    }\n    var seen = Object.create(null);\n    return array.filter(function (elem) {\n        var key = keyFn(elem);\n        if (seen[key]) {\n            return false;\n        }\n        seen[key] = true;\n        return true;\n    });\n}\nexport function distinctES6(array) {\n    var seen = new Set();\n    return array.filter(function (element) {\n        if (seen.has(element)) {\n            return false;\n        }\n        seen.add(element);\n        return true;\n    });\n}\nexport function firstIndex(array, fn) {\n    for (var i = 0; i < array.length; i++) {\n        var element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function first(array, fn, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = undefined; }\n    var index = firstIndex(array, fn);\n    return index < 0 ? notFoundValue : array[index];\n}\nexport function flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\nexport function range(arg, to) {\n    var from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    var result = [];\n    if (from <= to) {\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (var i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    var before = target.slice(0, insertIndex);\n    var after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    var index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    var index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    if (typeof (str) === _typeof.string || str instanceof String) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === _typeof.object\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return typeof (obj) === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return typeof obj === _typeof.function;\n}\nexport function validateConstraints(args, constraints) {\n    var len = Math.min(args.length, constraints.length);\n    for (var i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n    }\n}\nexport function getAllPropertyNames(obj) {\n    var res = [];\n    var proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull(x) {\n    return typeof x === 'undefined' ? null : x;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './promise-polyfill/polyfill.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\nexport { StateMachine };\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model, stateMachine) {\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = void 0;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\nexport { LinkComputer };\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { mergeSort } from '../../../base/common/arrays.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { FIN } from '../../../base/common/iterator.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { getAllPropertyNames } from '../../../base/common/types.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj;\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                if (!obj) {\n                    obj = { done: false, value: value };\n                }\n                else {\n                    obj.value = value;\n                }\n                return obj;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                return FIN;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n        var content = this._lines[lineNumber - 1];\n        var ranges = this._wordenize(content, wordDefinition);\n        var words = [];\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n            var range = ranges_1[_i];\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return Promise.resolve(null);\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        var changes = diffComputer.computeDiff();\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n        return Promise.resolve({\n            identical: identical,\n            changes: changes\n        });\n    };\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n        var originalLineCount = original.getLineCount();\n        var modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (var line = 1; line <= originalLineCount; line++) {\n            var originalLine = original.getLineContent(line);\n            var modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(edits);\n        }\n        var result = [];\n        var lastEol = undefined;\n        edits = mergeSort(edits, function (a, b) {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            var aRng = a.range ? 0 : 1;\n            var bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return Promise.resolve(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var seen = Object.create(null);\n        var suggestions = [];\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var wordUntil = model.getWordUntilPosition(position, wordDefRegExp);\n        var wordAt = model.getWordAtPosition(position, wordDefRegExp);\n        if (wordAt) {\n            seen[model.getValueInRange(wordAt)] = true;\n        }\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n            var word = e.value;\n            if (seen[word]) {\n                continue;\n            }\n            seen[word] = true;\n            if (!isNaN(Number(word))) {\n                continue;\n            }\n            suggestions.push({\n                kind: 18 /* Text */,\n                label: word,\n                insertText: word,\n                range: { startLineNumber: position.lineNumber, startColumn: wordUntil.startColumn, endLineNumber: position.lineNumber, endColumn: wordUntil.endColumn }\n            });\n        }\n        return Promise.resolve({ suggestions: suggestions });\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(Object.create(null));\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var result = Object.create(null);\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n            var words = model.getLineWords(line, wordDefRegExp);\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                var word = words_1[_i];\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                var array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    //#endregion\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return Promise.resolve(null);\n        }\n        var word = model.getValueInRange(wordRange);\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return Promise.resolve(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._foreignModule); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tresolve(methods);\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 100000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n"],"sourceRoot":""}